"use strict";(self.webpackChunknarrative_docs=self.webpackChunknarrative_docs||[]).push([[788],{83483:(e,t,i)=>{i.r(t),i.d(t,{assets:()=>o,contentTitle:()=>a,default:()=>h,frontMatter:()=>r,metadata:()=>d,toc:()=>c});var n=i(74848),s=i(28453);const r={sidebar_label:"Factions"},a="Factions",d={id:"pro/factions/index",title:"Factions",description:"Factions is a feature which allows you to assign NPC's to specific groups with their own behaviors and logic towards other factions.",source:"@site/docs/pro/factions/index.md",sourceDirName:"pro/factions",slug:"/pro/factions/",permalink:"/narrative-documentation/pro/factions/",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{sidebar_label:"Factions"},sidebar:"tutorialSidebar",previous:{title:"Community Events",permalink:"/narrative-documentation/pro/events/community-events"},next:{title:"F.A.Qs",permalink:"/narrative-documentation/pro/faqs"}},o={},c=[{value:"Usage",id:"usage",level:2},{value:"Game State",id:"game-state",level:2},{value:"ENarrativeFactionID Properties",id:"enarrativefactionid-properties",level:2},{value:"ETeamAttitude Properties",id:"eteamattitude-properties",level:2}];function l(e){const t={code:"code",em:"em",h1:"h1",h2:"h2",header:"header",img:"img",p:"p",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,s.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(t.header,{children:(0,n.jsx)(t.h1,{id:"factions",children:"Factions"})}),"\n",(0,n.jsx)(t.p,{children:"Factions is a feature which allows you to assign NPC's to specific groups with their own behaviors and logic towards other factions."}),"\n",(0,n.jsxs)(t.p,{children:["For example, you could have the high ranking gang of the ",(0,n.jsx)(t.strong,{children:"Tunnel Snakes"})," with their legions of members (",(0,n.jsx)(t.em,{children:"three"}),") and they can be set to aggressive against the Brotherhood."]}),"\n",(0,n.jsx)(t.h2,{id:"usage",children:"Usage"}),"\n",(0,n.jsx)(t.h2,{id:"game-state",children:"Game State"}),"\n",(0,n.jsx)(t.p,{children:"The game state controls all alliances between all factions. It allows you to set which factions are friendly, neutral or hostel to one another."}),"\n",(0,n.jsx)(t.p,{children:(0,n.jsx)(t.img,{alt:"gamestate-faction.png",src:i(2672).A+"",width:"946",height:"311"})}),"\n",(0,n.jsx)(t.h2,{id:"enarrativefactionid-properties",children:"ENarrativeFactionID Properties"}),"\n",(0,n.jsxs)(t.table,{children:[(0,n.jsx)(t.thead,{children:(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.th,{children:"Enumerator Name"}),(0,n.jsx)(t.th,{children:"Description"})]})}),(0,n.jsxs)(t.tbody,{children:[(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"None"}),(0,n.jsx)(t.td,{children:"Represents a person without an affiliation."})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"Bandits"}),(0,n.jsxs)(t.td,{children:["Example faction. Represents characters affiliated with bandits. Can be edited in ",(0,n.jsx)(t.code,{children:"NarrativeArsenal.h"}),"."]})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"Heroes"}),(0,n.jsxs)(t.td,{children:["Example faction. Represents characters affiliated with heroes. Can be edited in ",(0,n.jsx)(t.code,{children:"NarrativeArsenal.h"}),"."]})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"Civilians"}),(0,n.jsxs)(t.td,{children:["Example faction. Represents characters affiliated with civilians. Can be edited in ",(0,n.jsx)(t.code,{children:"NarrativeArsenal.h"}),"."]})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"Soldiers"}),(0,n.jsxs)(t.td,{children:["Example faction. Represents characters affiliated with soldiers. Can be edited in ",(0,n.jsx)(t.code,{children:"NarrativeArsenal.h"}),"."]})]})]})]}),"\n",(0,n.jsx)(t.h2,{id:"eteamattitude-properties",children:"ETeamAttitude Properties"}),"\n",(0,n.jsxs)(t.table,{children:[(0,n.jsx)(t.thead,{children:(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.th,{children:"Enumerator Name"}),(0,n.jsx)(t.th,{children:"Description"})]})}),(0,n.jsxs)(t.tbody,{children:[(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"Friendly"}),(0,n.jsx)(t.td,{children:"Represents an attitude that is friendly."})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"Neutral"}),(0,n.jsx)(t.td,{children:"Represents an attitude that is neutral."})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"Hostile"}),(0,n.jsx)(t.td,{children:"Represents an attitude that is hostile."})]})]})]})]})}function h(e={}){const{wrapper:t}={...(0,s.R)(),...e.components};return t?(0,n.jsx)(t,{...e,children:(0,n.jsx)(l,{...e})}):l(e)}},2672:(e,t,i)=>{i.d(t,{A:()=>n});const n=i.p+"assets/images/gamestate-faction-9d13ff9692f1e22629a7ed28334ffaad.png"},28453:(e,t,i)=>{i.d(t,{R:()=>a,x:()=>d});var n=i(96540);const s={},r=n.createContext(s);function a(e){const t=n.useContext(r);return n.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function d(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:a(e.components),n.createElement(r.Provider,{value:t},e.children)}}}]);