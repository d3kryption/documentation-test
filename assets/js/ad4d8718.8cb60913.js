"use strict";(self.webpackChunknarrative_docs=self.webpackChunknarrative_docs||[]).push([[7916],{9206:(t,e,i)=>{i.r(e),i.d(e,{assets:()=>s,contentTitle:()=>r,default:()=>u,frontMatter:()=>o,metadata:()=>c,toc:()=>l});var n=i(4848),a=i(8453);const o={sidebar_label:"Focused Overlay Material",sidebar_position:1},r="Focused Overlay Material",c={id:"interaction/custom-interact-functionality/focused-overlay-material/index",title:"Focused Overlay Material",description:"By default, when an item is interactable, Narrative will make it lerp a color to indicate its intractability. This however can be set to anything you require or cleared out to simply be ignored.",source:"@site/docs/interaction/custom-interact-functionality/focused-overlay-material/index.md",sourceDirName:"interaction/custom-interact-functionality/focused-overlay-material",slug:"/interaction/custom-interact-functionality/focused-overlay-material/",permalink:"/documentation-test/interaction/custom-interact-functionality/focused-overlay-material/",draft:!1,unlisted:!1,editUrl:"https://github.com/d3kryption/documentation-test/docs/interaction/custom-interact-functionality/focused-overlay-material/index.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_label:"Focused Overlay Material",sidebar_position:1},sidebar:"tutorialSidebar",previous:{title:"On Component Deactivated",permalink:"/documentation-test/interaction/custom-interact-functionality/events/on-component-deactivated/"},next:{title:"Interact action text",permalink:"/documentation-test/interaction/custom-interact-functionality/interact-action-text/"}},s={},l=[];function d(t){const e={a:"a",admonition:"admonition",h1:"h1",header:"header",p:"p",...(0,a.R)(),...t.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(e.header,{children:(0,n.jsx)(e.h1,{id:"focused-overlay-material",children:"Focused Overlay Material"})}),"\n",(0,n.jsx)(e.p,{children:"By default, when an item is interactable, Narrative will make it lerp a color to indicate its intractability. This however can be set to anything you require or cleared out to simply be ignored."}),"\n",(0,n.jsx)(e.admonition,{type:"note",children:(0,n.jsxs)(e.p,{children:["It is good ",(0,n.jsx)(e.a,{href:"https://www.accessibilitychecker.org/blog/video-game-accessibility-gaming-for-all/",children:"accessibility practice"})," to have an option to highlight interaction items for people who require further assistance."]})}),"\n",(0,n.jsx)(e.admonition,{type:"warning",children:(0,n.jsx)(e.p,{children:"It has been discovered that in Unreal 5.0, 5.1 and 5.2 that overlay materials do not work on meshes that have Nanite enabled. You can get around this by creating a decal instead of an overlay material but this works in Unreal 5.3 onwards."})})]})}function u(t={}){const{wrapper:e}={...(0,a.R)(),...t.components};return e?(0,n.jsx)(e,{...t,children:(0,n.jsx)(d,{...t})}):d(t)}},8453:(t,e,i)=>{i.d(e,{R:()=>r,x:()=>c});var n=i(6540);const a={},o=n.createContext(a);function r(t){const e=n.useContext(o);return n.useMemo((function(){return"function"==typeof t?t(e):{...e,...t}}),[e,t])}function c(t){let e;return e=t.disableParentContext?"function"==typeof t.components?t.components(a):t.components||a:r(t.components),n.createElement(o.Provider,{value:e},t.children)}}}]);